name: Release Java SDK to Maven Central

on:
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - name: Extract release version
        id: get_version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set project version
        run: mvn versions:set -DnewVersion=${RELEASE_VERSION} -DgenerateBackupPoms=false

      - name: Setup Maven settings
        run: |
          mkdir -p ~/.m2
          echo '<?xml version="1.0" encoding="UTF-8"?>
          <settings xmlns="http://maven.apache.org/SETTINGS/1.2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">
          <pluginGroups>
          </pluginGroups>
          <proxies>
          </proxies>
          <servers>
            <server>
              <id>ossrh</id>
              <username>${{ secrets.MAVEN_USERNAME }}</username>
              <password>${{ secrets.MAVEN_PASSWORD }}</password>
            </server>
          </servers>
          <mirrors>
            <mirror>
              <id>maven-default-http-blocker</id>
              <mirrorOf>external:http:*</mirrorOf>
              <name>Pseudo repository to mirror external repositories initially using HTTP.</name>
              <url>http://0.0.0.0/</url>
              <blocked>true</blocked>
            </mirror>
          </mirrors>
          <profiles>
          </profiles>
          </settings>
          ' > ~/.m2/settings.xml

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          delete_private_key: true

      - name: Deploy to Maven Central
        run: mvn clean deploy -P release --settings ~/.m2/settings.xml
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
